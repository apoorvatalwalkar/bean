#include "mesh.h"

Mesh::Mesh(RenderShapeData shape, glm::vec4 wEye, glm::vec4 wDirection){
    coneShape = shape;
    p = shape.inverse * wEye;
    d = shape.inverse * wDirection;
}


std::optional<Intersection> Mesh::checkIntersection(){
    Intersection intr = {.t = float(INT_MAX), .u = float(INT_MAX), .v = float(INT_MAX)};
    for (int i = 0; i < m_triangles.size(); ++i) {
        Intersection result = triangle.checkIntersection
    }
}

